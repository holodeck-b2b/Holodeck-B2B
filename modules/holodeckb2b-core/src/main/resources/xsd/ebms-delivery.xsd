<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2014 The Holodeck B2B Team, Sander Fieten

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<xsd:schema xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:S11="http://schemas.xmlsoap.org/soap/envelope/"
	xmlns:S12="http://www.w3.org/2003/05/soap-envelope"
	xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/"
	targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/"
	elementFormDefault="qualified" attributeFormDefault="unqualified"
	xmlns:rcpt="http://holodeck-b2b.org/schemas/2015/08/delivery/ebms/receiptchild">
	<xsd:annotation>
		<xsd:documentation xml:lang="en">This schema is a modified version of the standard schema that defines the XML Infoset of ebMS-3 headers.
			This schema defines how the standard schema is used by the FileDelivery method when using the "ebms" file format. 
			NOTE this schema is provided for convenience only for developers that need to process the delivery files.</xsd:documentation>
	</xsd:annotation>
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
	<xsd:import namespace="http://holodeck-b2b.org/schemas/2015/08/delivery/ebms/receiptchild"
		schemaLocation="delivery_rcpt_child.xsd"/>
	<xsd:element name="Messaging" type="Messaging"/>
	<xsd:complexType name="Messaging">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Because the xml document used for delivery will always apply to one message unit the sequence is replaced by a choice.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="SignalMessage" type="SignalMessage" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="UserMessage" type="UserMessage" minOccurs="1" maxOccurs="1"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="SignalMessage">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">As PullRequest will never be delivered to the business application the PullRequest element is removed as an option for the child of SignalMessage. Also a choice is introduced to reflect that a SignalMessage is always of one type.

Furthermore the Receipt child is now explicitly defined as the ReceiptChild element which is used by the FileDelivery method.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="MessageInfo"/>
			<xsd:choice>
				<xsd:element name="Receipt" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="rcpt:ReceiptChild"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Error" type="Error" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
					processContents="lax"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Error">
		<xsd:sequence>
			<xsd:element name="Description" type="tns:Description" minOccurs="0"/>
			<xsd:element name="ErrorDetail" type="xsd:token" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="category" type="xsd:token" use="optional"/>
		<xsd:attribute name="refToMessageInError" type="xsd:token" use="optional"/>
		<xsd:attribute name="errorCode" type="xsd:token" use="required"/>
		<xsd:attribute name="origin" type="xsd:token" use="optional"/>
		<xsd:attribute name="severity" type="xsd:token" use="required"/>
		<xsd:attribute name="shortDescription" type="xsd:token" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="Receipt">
		<xsd:sequence>
			<xsd:any namespace="##other" processContents="lax" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="UserMessage">
		<xsd:sequence>
			<xsd:element ref="MessageInfo"/>
			<xsd:element ref="PartyInfo"/>
			<xsd:element ref="CollaborationInfo"/>
			<xsd:element ref="MessageProperties" minOccurs="0"/>
			<xsd:element ref="PayloadInfo" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
	</xsd:complexType>
	<xsd:element name="MessageInfo" type="MessageInfo"/>
	<xsd:complexType name="MessageInfo">
		<xsd:sequence>
			<xsd:element name="Timestamp" type="xsd:dateTime"/>
			<xsd:element name="MessageId" type="tns:non-empty-string"/>
			<xsd:element name="RefToMessageId" type="tns:non-empty-string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="PartyInfo" type="PartyInfo"/>
	<xsd:complexType name="PartyInfo">
		<xsd:sequence>
			<xsd:element name="From" type="tns:From"/>
			<xsd:element name="To" type="tns:To"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PartyId">
		<xsd:simpleContent>
			<xsd:extension base="tns:non-empty-string">
				<xsd:attribute name="type" type="tns:non-empty-string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="From">
		<xsd:sequence>
			<xsd:element name="PartyId" type="tns:PartyId" maxOccurs="unbounded"/>
			<xsd:element name="Role" type="tns:non-empty-string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="To">
		<xsd:sequence>
			<xsd:element name="PartyId" type="tns:PartyId" maxOccurs="unbounded"/>
			<xsd:element name="Role" type="tns:non-empty-string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="CollaborationInfo" type="CollaborationInfo"/>
	<xsd:complexType name="CollaborationInfo">
		<xsd:sequence>
			<xsd:element name="AgreementRef" type="tns:AgreementRef" minOccurs="0"/>
			<xsd:element name="Service" type="tns:Service"/>
			<xsd:element name="Action" type="xsd:token"/>
			<xsd:element name="ConversationId" type="xsd:token"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Service">
		<xsd:simpleContent>
			<xsd:extension base="tns:non-empty-string">
				<xsd:attribute name="type" type="tns:non-empty-string" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="AgreementRef">
		<xsd:simpleContent>
			<xsd:extension base="tns:non-empty-string">
				<xsd:attribute name="type" type="tns:non-empty-string" use="optional"/>
				<xsd:attribute name="pmode" type="tns:non-empty-string" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:element name="PayloadInfo" type="PayloadInfo"/>
	<xsd:complexType name="PayloadInfo">
		<xsd:sequence>
			<xsd:element name="PartInfo" type="tns:PartInfo" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PartInfo">
		<xsd:sequence>
			<xsd:element name="Schema" type="tns:Schema" minOccurs="0"/>
			<xsd:element name="Description" type="tns:Description" minOccurs="0"/>
			<xsd:element name="PartProperties" type="tns:PartProperties" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="href" type="xsd:token"/>
	</xsd:complexType>
	<xsd:complexType name="Schema">
		<xsd:attribute name="location" type="xsd:anyURI" use="required"/>
		<xsd:attribute name="version" type="tns:non-empty-string" use="optional"/>
		<xsd:attribute name="namespace" type="tns:non-empty-string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="Property">
		<xsd:simpleContent>
			<xsd:extension base="tns:non-empty-string">
				<xsd:attribute name="name" type="tns:non-empty-string" use="required"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="PartProperties">
		<xsd:sequence>
			<xsd:element name="Property" type="tns:Property" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="MessageProperties" type="MessageProperties"/>
	<xsd:complexType name="MessageProperties">
		<xsd:sequence>
			<xsd:element name="Property" type="Property" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Description">
		<xsd:simpleContent>
			<xsd:extension base="tns:non-empty-string">
				<xsd:attribute ref="xml:lang" use="required"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:simpleType name="non-empty-string">
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
