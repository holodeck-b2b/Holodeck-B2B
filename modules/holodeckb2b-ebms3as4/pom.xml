<!--

    Copyright (C) 2014 The Holodeck B2B Team, Sander Fieten

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.holodeckb2b</groupId>
        <artifactId>holodeckb2b</artifactId>
        <version>8.0.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>holodeckb2b-ebms3as4</artifactId>
    <packaging>jar</packaging>
    <name>Holodeck B2B - ebsM3 / AS4</name>
	<description>Contains the Holodeck B2B implementation of the ebMS V3 and AS4 Profile</description>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>holodeckb2b-core</artifactId>
        </dependency>       
 	    <!-- WS-Addressing libs required for multi-hop support -->
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>addressing</artifactId>
            <version>${axis2-version}</version>
            <type>mar</type>
            <scope>runtime</scope>
        </dependency>

		<!-- Dependencies for testing -->
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter</artifactId>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.junit.vintage</groupId>
	        <artifactId>junit-vintage-engine</artifactId>
	        <scope>test</scope>
	    </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
            <scope>test</scope>
        </dependency>
		<!-- Test util classes from the Core -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>holodeckb2b-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>org.holodeckb2b.commons</groupId>
			<artifactId>generic-utils</artifactId>
			<type>test-jar</type>
			<scope>test</scope>            
        </dependency>        
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-aar-maven-plugin</artifactId>
                <version>${axis2-version}</version>
                <configuration>
                    <servicesXmlFile>src/main/resources/META-INF/services.xml</servicesXmlFile>
                    <aarName>hb2b-as4-msh</aarName>
                    <includeDependencies>false</includeDependencies>
					<!-- The classDirectory parameter is set to a non existing directory to prevent the
                    	 plugin from adding the project classes to the aar
                    -->
                    <classesDirectory>no_classes</classesDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>create-hb2b-as4-service</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>aar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>            
        </plugins>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <excludes>
              <exclude>xsd/**</exclude>
            </excludes>
          </resource>
        </resources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.axis2
										</groupId>
										<artifactId>
											axis2-aar-maven-plugin
										</artifactId>
										<versionRange>
											[1.7.7,)
										</versionRange>
										<goals>
											<goal>aar</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>        
    </build>
</project>
